<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.automation.tests</groupId>
	<artifactId>AutomationTests</artifactId>
	<!-- mvn versions:set -DnewVersion=1.0.2-SNAPSHOT -->
	<version>1.0.0-SNAPSHOT</version>
	<!-- mvn versions:display-dependency-updates -->
	<!-- mvn versions:use-latest-versions -->
	<dependencies>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>2.46.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.46.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<version>2.46.0</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.35</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.12</version>
		</dependency>
		<dependency>
			<groupId>org.browsermob</groupId>
			<artifactId>browsermob-proxy</artifactId>
			<version>2.0-beta-1</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.10.52</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>1.8.11</version>
		</dependency>
		<dependency>
			<groupId>io.appium</groupId>
			<artifactId>java-client</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.rallydev.rest</groupId>
			<artifactId>rally-rest-api</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.uncommons</groupId>
			<artifactId>reportng</artifactId>
			<version>1.1.4</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.testng</groupId>
					<artifactId>testng</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>
	</dependencies>
	<build>
		<!-- mvn versions:display-plugin-updates -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.16</version>
					<configuration>
						<suiteXmlFiles>
							<suiteXmlFile>src/test/resources/testng/testng.xml</suiteXmlFile>
						</suiteXmlFiles>
						<properties>
							<property>
								<name>listener</name>
								<value>org.uncommons.reportng.HTMLReporter, org.uncommons.reportng.JUnitXMLReporter, com.automation.testng.RetryListener,com.automation.testng.TestListener</value>
							</property>
						</properties>
					</configuration>
				</plugin>
				<plugin>
					<!-- mvn dependency:copy-dependencies -Dclassifer=sources -->
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<phase>install</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>lib</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.lazerycode.jmeter</groupId>
					<artifactId>jmeter-maven-plugin</artifactId>
					<version>1.8.1</version>
					<configuration>
						<!-- By default the test results are saved in a file /target/jmeter/results/<testname>-<timestamp>.jtl 
							Further processing is easier without timestamp though. -->
						<testResultsTimestamp>false</testResultsTimestamp>

						<!-- To simplify debugging, it is advisable to adapt the loglevel. 
							The jmeter logs are written to the file jmeter.log. -->
						<overrideRootLogLevel>DEBUG</overrideRootLogLevel>

						<!-- By default, the console output during a jmeter test run is suppressed. 
							We want to display the progress using the listener "Generate Summary Results" 
							(which periodically prints stats to stdout). Therefore we have to make sure, 
							that the jmeter output is not suppressed. -->
						<suppressJMeterOutput>true</suppressJMeterOutput>

						<!-- If tests fail (e.g. a http-request running into a timeout), the 
							corresponding maven goal also fails (and subsequent goals aren't executed 
							anymore). We want to create graphs from test-results, no matter if some requests 
							failed or not, so we ignore jmeter failures. -->
						<ignoreResultFailures>true</ignoreResultFailures>
						<executions>
							<execution>
								<id>jmeter-tests</id>
								<phase>verify</phase>
								<goals>
									<goal>jmeter</goal>
								</goals>
							</execution>
						</executions>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/test/resources</directory>
			</resource>
		</resources>
	</build>
</project>